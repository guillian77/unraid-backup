#!/bin/bash
#encoding=utf8

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# BACKUP SCRIPT
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# @author AufrÃ¨re Guillian
# @copyright 2022
#
# This script is able to backup and crypt un list of directories.
#
# Depedencies :
#
# [age] : ich777
# Install : Unraid -> Apps -> Age
# Description : Used to crypt files.
#
# [User Scripts] : Andrew Zawadzki
# Install : Unraid -> Apps -> User Scripts
# Description : Used to run and schedule bash script.
#

# Decrypt
# age --decrypt -i key.txt -o eco.tar.gz eco.tar.gz.age

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONFIG
# ------------------------------------------------------------------------------------------------------------------------------------------------------------

# Target backup dir.
BACKUPS_DIR="/mnt/remotes/ANTONIN.IP_guillian_backups/"

# List of directories to backup.
declare -A BACKUP_DIR_LIST

BACKUP_DIR_LIST[bitwarden]="/mnt/user/appdata/vaultwarden"
BACKUP_DIR_LIST[homeAssistantConfig]="/mnt/remotes/192.168.0.251_config"
BACKUP_DIR_LIST[homeAssistantBackup]="/mnt/remotes/192.168.0.251_backup"
BACKUP_DIR_LIST[guillianPapers]="/mnt/user/guillian_papers"
BACKUP_DIR_LIST[pfsense]="/mnt/user/backups/Pfsense"
BACKUP_DIR_LIST[unraid]="/mnt/user/backups/Unraid"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# DEFINE PATHS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
SCRIPT_PATH="/boot/config/plugins/user.scripts/scripts/backup"

SECRET_KEY_PATH="${SCRIPT_PATH}/key.txt"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONSOLE FUNCTIONS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
bigTitle()
{
    echo -e "$(date +'%Y-%m-%d') #--------------------------------------------------------------#"
    echo -e "$(date +'%Y-%m-%d') # $1$"
    echo -e "$(date +'%Y-%m-%d') #--------------------------------------------------------------#"
}

title()
{
    echo -e "$(date +'%Y-%m-%d') ----------------------------------------------------------------"
    echo -e "$(date +'%Y-%m-%d') $1"
    echo -e "$(date +'%Y-%m-%d') ----------------------------------------------------------------"
}

section()
{
    echo -e "$(date +'%Y-%m-%d') # --- $1"
}

info()
{
    echo -e "$(date +'%Y-%m-%d') INFO $1"
}

success()
{
    echo -e "$(date +'%Y-%m-%d') SUCCESS $1."
}

error()
{
    echo -e "$(date +'%Y-%m-%d') ERROR $1."
}

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# SCRIPT ITSELF
# ------------------------------------------------------------------------------------------------------------------------------------------------------------

bigTitle "BACKUP SCRIPT START"

# ----------------------------------------------------------------------------------------------------------------------
# BEFORE BACKUP
# ----------------------------------------------------------------------------------------------------------------------

# --- Backup unraid boot configuration.

section "BEFORE BACKUP DIRS."

title "Backuping full unraid configuration."

targetUnraidFlashName="$(date +'%Y-%m-%d')_flash_full"
targetUnraidBackupDir="/mnt/user/backups/Unraid/"
targetUnraidFullPath="${targetUnraidBackupDir}${targetUnraidFlashName}"

if [ -d "${targetUnraidFullPath}" ]; then
    info "Already exist, remove before: ${targetUnraidFullPath}."
    rm -rf "${targetUnraidFullPath}"
fi

info "Copying unraid boot configuration."
cp -r "/boot" "${targetUnraidFullPath}"

info "Create unraid boot configuration archive."
(cd "${targetUnraidFullPath}" && zip -r9 "${targetUnraidFullPath}.zip" *)

info "Clean up old directory."
rm -rf "${targetUnraidFullPath}" || true

# ----------------------------------------------------------------------------------------------------------------------
# BACKUP DIRECTORIES LIST
# ----------------------------------------------------------------------------------------------------------------------
section "Backup directories"

if [ ! -d "$BACKUPS_DIR" ]
then
    error "Backup directory not found."
    info "$BACKUPS_DIR"
    exit
fi

success "Backup directory found."
info "$BACKUPS_DIR"

mkdir -p "$BACKUPS_DIR/crypted"

for dirIndex in "${!BACKUP_DIR_LIST[@]}"; do
    dir="${BACKUP_DIR_LIST[$dirIndex]}"

    title "Backup $dirIndex"

    if [ ! -d "$dir" ]; then
        error "Directory not found under ${Yel}$dir${NC}."
        info "SKIP, try next backup directory."
        continue
    fi

    success "Directory found under $dir."

    tempBackupDir="${BACKUPS_DIR}crypted/"

    # -- Compress && Crypt
    archiveName="$(date +'%Y-%m-%d')_${dirIndex}.tar.gz"

    info "Compress && Crypt ${archiveName} to ${archiveName}.age."
    info "Target : ${tempBackupDir}${archiveName}.age"

    tar -cz ${dir} | age -r $(age-keygen -y ${SECRET_KEY_PATH}) > "${tempBackupDir}${archiveName}.age"
done
