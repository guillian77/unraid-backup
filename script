#!/bin/bash
#encoding=utf8

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# BACKUP SCRIPT
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# @author AufrÃ¨re Guillian
# @copyright 2022
#
# This script is able to backup and crypt un list of directories.
#
# Depedencies :
#
# [age] : ich777
# Install : Unraid -> Apps -> Age
# Description : Used to crypt files.
#
# [User Scripts] : Andrew Zawadzki
# Install : Unraid -> Apps -> User Scripts
# Description : Used to run and schedule bash script.
#

# Decrypt
# age --decrypt -i key.txt -o eco.tar.gz eco.tar.gz.age

SCRIPT_PATH="/boot/config/plugins/user.scripts/scripts/backup"

# ----------------------------------------------------------------------------------------------------------------------
# CONFIG
# ----------------------------------------------------------------------------------------------------------------------

declare -A BACKUP_TARGET_LIST
declare -A BACKUP_DIR_LIST
declare -A TO_PURGE_DIR_LIST

# ----------------------------------------------------------------------------------------------------------------------
# SOURCES
# ----------------------------------------------------------------------------------------------------------------------
source "${SCRIPT_PATH}/src/message.sh"
source "${SCRIPT_PATH}/src/backup.sh"
source "${SCRIPT_PATH}/src/purge.sh"
source "${SCRIPT_PATH}/config.sh"

# ----------------------------------------------------------------------------------------------------------------------
# SCRIPT ITSELF
# ----------------------------------------------------------------------------------------------------------------------
bigTitle "BACKUP SCRIPT START"

# Remote connect to Pfsense to get backups and conf.
backupPfsense

# Copy, encrypt any of "BACKUP_DIR_LIST" directory on each "BACKUP_TARGET_LIST" servers.
for targetIndex in "${!BACKUP_TARGET_LIST[@]}"; do
    targetPath="${BACKUP_TARGET_LIST[$targetIndex]}"

    backup_dirs_to "$targetPath"
done

title "Purge"
for targetIndex in "${!TO_PURGE_DIR_LIST[@]}"; do
    targetPath="${TO_PURGE_DIR_LIST[$targetIndex]}"

    purge "$targetPath" "*_full"
done

success "Backup script done"
