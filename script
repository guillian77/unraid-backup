#!/bin/bash
#encoding=utf8

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# BACKUP SCRIPT
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# @author AufrÃ¨re Guillian
# @copyright 2022
#
# This script is able to backup and crypt un list of directories.
#
# Depedencies :
#
# [age] : ich777
# Install : Unraid -> Apps -> Age
# Description : Used to crypt files.
#
# [User Scripts] : Andrew Zawadzki
# Install : Unraid -> Apps -> User Scripts
# Description : Used to run and schedule bash script.
#

# Decrypt
# age --decrypt -i key.txt -o eco.tar.gz eco.tar.gz.age

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONFIG
# ------------------------------------------------------------------------------------------------------------------------------------------------------------

# Target backup dir.
BACKUPS_DIR="/mnt/remotes/82.66.145.90_guillian_backups/"

# List of directories to backup.
declare -A BACKUP_DIR_LIST

BACKUP_DIR_LIST[bitwarden]="/mnt/user/appdata/vaultwarden"
BACKUP_DIR_LIST[homeAssistantConfig]="/mnt/remotes/192.168.0.251_config"
BACKUP_DIR_LIST[homeAssistantBackup]="/mnt/remotes/192.168.0.251_backup"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# SCRIPT COLORS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
NC='\033[0m'    # Text Reset

# Regular             Bold                  Underline             High Intensity        BoldHigh Intens       Background            High Intensity Backgrounds
Bla='\033[0;30m';     BBla='\033[1;30m';    UBla='\033[4;30m';    IBla='\033[0;90m';    BIBla='\033[1;90m';   On_Bla='\033[40m';    On_IBla='\033[0;100m';
Red='\033[0;31m';     BRed='\033[1;31m';    URed='\033[4;31m';    IRed='\033[0;91m';    BIRed='\033[1;91m';   On_Red='\033[41m';    On_IRed='\033[0;101m';
Gre='\033[0;32m';     BGre='\033[1;32m';    UGre='\033[4;32m';    IGre='\033[0;92m';    BIGre='\033[1;92m';   On_Gre='\033[42m';    On_IGre='\033[0;102m';
Yel='\033[0;33m';     BYel='\033[1;33m';    UYel='\033[4;33m';    IYel='\033[0;93m';    BIYel='\033[1;93m';   On_Yel='\033[43m';    On_IYel='\033[0;103m';
Blu='\033[0;34m';     BBlu='\033[1;34m';    UBlu='\033[4;34m';    IBlu='\033[0;94m';    BIBlu='\033[1;94m';   On_Blu='\033[44m';    On_IBlu='\033[0;104m';
Pur='\033[0;35m';     BPur='\033[1;35m';    UPur='\033[4;35m';    IPur='\033[0;95m';    BIPur='\033[1;95m';   On_Pur='\033[45m';    On_IPur='\033[0;105m';
Cya='\033[0;36m';     BCya='\033[1;36m';    UCya='\033[4;36m';    ICya='\033[0;96m';    BICya='\033[1;96m';   On_Cya='\033[46m';    On_ICya='\033[0;106m';
Whi='\033[0;37m';     BWhi='\033[1;37m';    UWhi='\033[4;37m';    IWhi='\033[0;97m';    BIWhi='\033[1;97m';   On_Whi='\033[47m';    On_IWhi='\033[0;107m';

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# DEFINE PATHS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
SCRIPT_PATH="/boot/config/plugins/user.scripts/scripts/backup"

SECRET_KEY_PATH="${SCRIPT_PATH}/key.txt"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONSOLE FUNCTIONS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
bigTitle()
{
    echo -e "$(date +'%Y-%m-%d') ${BIBlu}#--------------------------------------------------------------#${NC}"
    echo -e "$(date +'%Y-%m-%d') ${BIBlu}# $1${NC}"
    echo -e "$(date +'%Y-%m-%d') ${BIBlu}#--------------------------------------------------------------#${NC}"
}

title()
{
    echo -e "$(date +'%Y-%m-%d') ${Blu}----------------------------------------------------------------${NC}"
    echo -e "$(date +'%Y-%m-%d') ${Blu}$1${NC}"
    echo -e "$(date +'%Y-%m-%d') ${Blu}----------------------------------------------------------------${NC}"
}

section()
{
    echo -e "$(date +'%Y-%m-%d') ${Cya}# --- $1 ${NC}"
}

info()
{
    echo -e "$(date +'%Y-%m-%d') ${Cya}INFO${NC} $1"
}

success()
{
    echo -e "$(date +'%Y-%m-%d') ${Gre}SUCCESS${NC} $1."
}

error()
{
    echo -e "$(date +'%Y-%m-%d') ${Red}ERROR${NC} $1."
}

# ------------------------------------------------------------------------------------------------------------------------------------------------------------
# SCRIPT ITSELF
# ------------------------------------------------------------------------------------------------------------------------------------------------------------
bigTitle "BACKUP SCRIPT START"
if [ ! -d "$BACKUPS_DIR" ]
then
    error "Backup directory not found."
    info "${Yel}$BACKUPS_DIR${NC}"
    exit
fi

success "Backup directory found."
info "${Yel}$BACKUPS_DIR${NC}"

mkdir -p "$BACKUPS_DIR/crypted"

for dirIndex in "${!BACKUP_DIR_LIST[@]}"; do
    dir="${BACKUP_DIR_LIST[$dirIndex]}"

    title "Backup $dirIndex"

    if [ ! -d "$dir" ]; then
        error "Directory not found under ${Yel}$dir${NC}."
        info "SKIP, try next backup directory."
        continue
    fi

    success "Directory found under  ${Yel}$dir${NC}."

    tempBackupDir="${BACKUPS_DIR}crypted/"

    # -- Compress && Crypt
    archiveName="$(date +'%Y-%m-%d')_${dirIndex}.tar.gz"

    section "Compress && Crypt ${archiveName} to ${archiveName}.age."
    info "Target : ${tempBackupDir}${archiveName}.age"

    tar -cz ${dir} | age -r $(age-keygen -y ${SECRET_KEY_PATH}) > "${tempBackupDir}${archiveName}.age"
done
